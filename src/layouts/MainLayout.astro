---
import Navbar from '../components/Navbar.astro';
import Footer from '../components/Footer.astro';
import logo from '../assets/logo.svg';

interface Props {
  title: string;
  description?: string;
}

const { title, description = "Official website of N0wayBack Team" } = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="description" content={description} />
    <title>{title} | N0wayBack</title>
    <link rel="icon" type="image/svg+xml" href={logo.src} />
    <link href="https://fonts.googleapis.com/css2?family=Fira+Code:wght@400;500;600;700&family=Inter:wght@300;400;500;600;700;800&display=swap" rel="stylesheet">
    
    <script is:inline>
      // 立即执行脚本，避免闪烁
      const getThemePreference = () => {
        if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
          return localStorage.getItem('theme');
        }
        return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
      };
      
      const theme = getThemePreference();
      document.documentElement.classList.toggle('dark', theme === 'dark');
      
      if (typeof localStorage !== 'undefined') {
        localStorage.setItem('theme', theme);
      }
    </script>
  </head>
  <body class="bg-primary-light dark:bg-primary-dark text-light-light dark:text-light-dark min-h-screen terminal-boot">
    <Navbar />
    <main class="fade-in">
      <slot />
    </main>
    <Footer />
    
    <script>
      document.addEventListener('DOMContentLoaded', () => {
        // 获取系统主题偏好
        const prefersDarkScheme = window.matchMedia('(prefers-color-scheme: dark)');
        
        // 从 localStorage 中获取用户的主题选择
        const currentTheme = localStorage.getItem('theme');
        
        // 如果用户设置了主题，使用它
        if (currentTheme === 'dark') {
          document.documentElement.classList.add('dark');
        } else if (currentTheme === 'light') {
          document.documentElement.classList.remove('dark');
        } else {
          // 否则根据系统首选项设置
          if (prefersDarkScheme.matches) {
            document.documentElement.classList.add('dark');
          } else {
            document.documentElement.classList.remove('dark');
          }
        }

        // 添加终端启动效果
        setTimeout(() => {
          document.body.classList.add('terminal-booted');
        }, 500);
      });
    </script>
  </body>
</html>

<style is:global>
  :root {
    --selection-bg: rgba(0, 158, 127, 0.3); /* 浅色模式使用更深的颜色 */
    --scrollbar-track: #e5e7eb;
    --scrollbar-thumb: #009e7f; /* 更新为浅色模式的深绿色 */
  }
  
  .dark {
    --selection-bg: rgba(100, 255, 218, 0.2); /* 暗色模式继续使用原来的颜色 */
    --scrollbar-track: #0a192f;
    --scrollbar-thumb: #64ffda; /* 暗色模式继续使用原来的颜色 */
  }
  
  ::selection {
    background-color: var(--selection-bg);
  }
  
  ::-webkit-scrollbar {
    width: 12px;
  }
  
  ::-webkit-scrollbar-track {
    background: var(--scrollbar-track);
  }
  
  ::-webkit-scrollbar-thumb {
    background: var(--scrollbar-thumb);
    border-radius: 6px;
  }
  
  /* 终端启动效果 */
  .terminal-boot::before {
    content: "";
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: #000;
    opacity: 1;
    z-index: 9999;
    transition: opacity 1s ease;
    pointer-events: none;
  }

  .terminal-booted::before {
    opacity: 0;
  }

  .fade-in {
    opacity: 0;
    animation: fadeIn 1s ease forwards;
    animation-delay: 0.5s;
  }

  @keyframes fadeIn {
    from { opacity: 0; transform: translateY(10px); }
    to { opacity: 1; transform: translateY(0); }
  }
</style>
